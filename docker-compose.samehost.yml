services:
  # Main application service for development
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.samehost
    container_name: auth-service-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=samehost
      - MONGO_URI=mongodb://mongodb:27017/auth_db
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - PASSWORD_RESET_EXPIRES_IN=${PASSWORD_RESET_EXPIRES_IN}
      - VERIFICATION_CODE_EXPIRES_IN=${VERIFICATION_CODE_EXPIRES_IN}
      - HOST_URL=${HOST_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      - mongodb
      - mailhog
    networks:
      - auth-network
    restart: unless-stopped
    command: npm run start

  # MongoDB service for samehost development
  mongodb:
    image: mongo:6.0
    container_name: auth-mongodb-samehost
    ports:
      - "27017:27017"
    volumes:
      - mongodb-samehost-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=auth_db
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: auth-mailhog-samehost
    ports:
      - "1025:1025"  # SMTP server port
      - "8025:8025"  # Web UI port
    networks:
      - auth-network
    restart: unless-stopped
networks:
  auth-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.11.0/24
          gateway: 10.10.11.1

volumes:
  mongodb-samehost-data: